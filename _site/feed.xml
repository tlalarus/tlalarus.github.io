<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My Practice</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 21 Nov 2021 01:40:33 +0900</pubDate>
    <lastBuildDate>Sun, 21 Nov 2021 01:40:33 +0900</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>Ethernet 케이블로 ssh 통신하기(Ubuntu)</title>
        <description>&lt;p&gt;개발보드와 타겟보드 ssh통신을 통해서 좀더 편리한 개발환경 구성해보았습니다. &lt;br /&gt;
Jetson nano 보드에 배포할 프로그램을 개발하려고 합니다. 배포환경과 개발환경이 꼭 동일할 필요는 없습니다. &lt;br /&gt;
즉, 젯슨나노에 배포한다고 해서 젯슨나노에 에디터 설치해서 개발할 필요는 없다는 뜻입니다.&lt;/p&gt;
&lt;h2 id=&quot;원하는-workflow&quot;&gt;원하는 Workflow&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;개발에 필요한 모든 툴이 갖춰진 내 laptop(&lt;strong&gt;Client&lt;/strong&gt;)에서 코드를 작성한다.&lt;/li&gt;
  &lt;li&gt;작성한 코드를 타겟보드 환경에 맞게 cross-compile 한다.&lt;/li&gt;
  &lt;li&gt;빌드된 코드를 &lt;strong&gt;타켓보드로 전송&lt;/strong&gt; 한다.&lt;/li&gt;
  &lt;li&gt;타겟보드(&lt;strong&gt;Server&lt;/strong&gt;)에서 빌드 결과물을 실행한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;prepare&quot;&gt;Prepare&lt;/h2&gt;
&lt;p&gt;서버쪽 필요한 패키지: &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh-server&lt;/code&gt; &lt;br /&gt;
클라이언트쪽 필요한 패키지: &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh-client&lt;/code&gt; (ubuntu에는 기본적으로 설치됨)&lt;/p&gt;
&lt;h2 id=&quot;ssh-접속설정&quot;&gt;SSH 접속설정&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Server&lt;/strong&gt; 에서 tcp 포트 22번을 허용해준다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo ufw allow 22/tcp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/ssh/sshd_config&lt;/code&gt; 파일을 아래와 같이 수정해서 root계정에 직접 로그인하는 것을 차단한다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PermitRootLogin no
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;ssh-접속&quot;&gt;SSH 접속&lt;/h2&gt;
&lt;p&gt;먼저, 서버에서 ssh접속을 열어준다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# service sshd start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;아래 명령어로 ssh서비스가 구동중인지 확인할 수 있다(Active 인지 확인).&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# service sshd status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;서버에서 랜선이 연결된 인터페이스(&lt;code class=&quot;highlighter-rouge&quot;&gt;eth0&lt;/code&gt;)의 ip(&lt;code class=&quot;highlighter-rouge&quot;&gt;inet6&lt;/code&gt;)를 확인한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ifconfig
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;클라이언트에서 ssh 접속을 시도한다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh [USERNAME]@[IPADDRESS]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;파일-동기화rsync&quot;&gt;파일 동기화(rsync)&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -azvh source_dir destination_dir 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;-az : 압축한 데이터를 보낸다.(압축하지 않고 보낼시 권한정보가 보존되지 않을 수 있다.)&lt;/li&gt;
  &lt;li&gt;-h : human-readable.&lt;/li&gt;
  &lt;li&gt;-v : 자세한 정보를 출력한다.&lt;/li&gt;
  &lt;li&gt;source_dir 에 slash가 붙으면 source_dir의 내용물만 전송되므로 주의할 것.
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -azvh src_dir [USERNAME]@[IPADDRESS]:/home/[USERNAME]/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 21 Nov 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2021-11/connect-ubuntu-lan-ssh</link>
        <guid isPermaLink="true">http://localhost:4000/2021-11/connect-ubuntu-lan-ssh</guid>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>coding cheatsheet</title>
        <description>&lt;ul&gt;
  &lt;li&gt;포인터형 변수는 &lt;code class=&quot;highlighter-rouge&quot;&gt;new&lt;/code&gt; - &lt;code class=&quot;highlighter-rouge&quot;&gt;delete&lt;/code&gt; , 배열은 &lt;code class=&quot;highlighter-rouge&quot;&gt;new[]&lt;/code&gt; - &lt;code class=&quot;highlighter-rouge&quot;&gt;delete[]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;동적할당 메모리는 Heap 영역에 할당된다.&lt;/li&gt;
  &lt;li&gt;포인터를 재할당 할때는 &lt;code class=&quot;highlighter-rouge&quot;&gt;delete&lt;/code&gt; 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;new&lt;/code&gt; 하기&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 16 Jul 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2021-07/coding-guide</link>
        <guid isPermaLink="true">http://localhost:4000/2021-07/coding-guide</guid>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Callback 동작 정리</title>
        <description>&lt;p&gt;Callback에서 맨날 헷갈리는 개념을 Server-Client 구조에 적용해서 정리해보았습니다.&lt;/p&gt;

&lt;h2 id=&quot;callback의-사용&quot;&gt;Callback의 사용&lt;/h2&gt;
&lt;p&gt;Callback은 서버가 클라이언트를 호출하는 것입니다. 서버에 콜백 핸들러를 등록하면 등록해놓은 핸들러가 핸들러에 연결된 콜백함수를 호출합니다. 콜백 핸들러라는 것은 콜백함수의 형태를 정의해 놓은 것을 의미합니다. 형태를 정의해 놓아야 인자를 전달할 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;callback-구조-빠르게-파악하기&quot;&gt;Callback 구조 빠르게 파악하기&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;콜백함수의 정체는? &lt;br /&gt;
  콜백함수의 형태(signature) 파악하기.&lt;/li&gt;
  &lt;li&gt;콜백함수를 어디에 등록(핸들러)했나? &lt;br /&gt;
  콜백함수의 함수포인터를 받는곳이 어딘지 파악하기.&lt;/li&gt;
  &lt;li&gt;콜백함수 핸들러가 어디에서 호출되나? &lt;br /&gt;
  어떤 함수가 호출되면 내가 등록한 함수가 콜백되는지 파악하기.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 01 Jun 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2021-06/callback</link>
        <guid isPermaLink="true">http://localhost:4000/2021-06/callback</guid>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>docker 컨테이너에서 usb 카메라 SDK 설치</title>
        <description>&lt;p&gt;새로운 프로젝트에서 사용하는 Jetson 보드에 카메라 동작 기능을 구현하고 있습니다. &lt;br /&gt;
아래의 이유로 docker 이미지를 생성하기로 했습니다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;보드에서 직접 빌드하는 방식은 느려서 불편하다.&lt;/li&gt;
  &lt;li&gt;개발환경을 구체적으로 명시하고 싶어서.&lt;/li&gt;
  &lt;li&gt;내 PC에서 개발하고 있는 다른 프로젝트들과 개발환경이 꼬일까봐 독립된 환경을 구성하고 싶어서.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이제 막 docker를 공부하고 있어서 진행이 더디지만 Dockerfile에 카메라 제조사의 홈페이지로부터 SDK 패키지를 다운로드 받는 것 까지는 성공했습니다.
SDK의 install 을 실행하니 설치 도중&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;cp: cannot create regular file 'etc/udev/rules.d/': No such file or directory&lt;/code&gt; 메세지가 나오면서 종료되었습니다.
젯슨 보드에 직접 설치하는건 잘 되는데… 컨테이너에서 usb 장치에 접근하기 위한 어떤 모듈이 존재하지 않는 상태가 원인인 것 같은 느낌이 듭니다.&lt;/p&gt;

&lt;p&gt;아래는 해결방법인 듯 한 참고 페이지 &lt;br /&gt;
https://forums.balena.io/t/docker-container-cannot-access-dynamically-plugged-usb-devices/4277 &lt;br /&gt;
https://www.losant.com/blog/how-to-access-serial-devices-in-docker&lt;/p&gt;

&lt;p&gt;아직 시도는 안해봤지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;etc/udev/rules.d&lt;/code&gt; 파일을 직접 생성해주는 방법인 것 같습니다. 시도해본 결과는 아래에 추가할 예정!&lt;/p&gt;

&lt;p&gt;05-12 추가 : udev 패키지를 설치해서 해결했습니다.
&lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get install udev&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 11 May 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2021-05/usbdevice-docker-container</link>
        <guid isPermaLink="true">http://localhost:4000/2021-05/usbdevice-docker-container</guid>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Depth estimation 관련 용어 및 개념 정리</title>
        <description>&lt;p&gt;싱글 영상을 이용한 depth estimation을 공부해보려고 합니다. 헷갈리는 개념들이 있어서 정리해보았습니다.&lt;/p&gt;

&lt;h1 id=&quot;depth-estimation-이란&quot;&gt;Depth estimation 이란?&lt;/h1&gt;
&lt;p&gt;Depth는 카메라에서부터 영상의 어느 (u, v) 좌표지점까지의 실제 거리를 측정하는 것과 깊은 관련이 있습니다. 우리가 흔히 말하는 이미지는 3D 포인트들이 2D로 mapping되어 depth정보가 손실됩니다.&lt;/p&gt;

&lt;p&gt;2D를 3D로 &lt;em&gt;inverse&lt;/em&gt; 하고 싶다면? 이것은 2D 이미지만 가지고 scene을 복원하겠다는 의미입니다. depth estimation에 관한 많은 연구들이 이루어지고 있습니다. 많이 연구되었고 가장 성공적인 방법은 stereo vision을 이용하는 기술입니다. 그리고 deep learning을 이용한 기술도 엄청난 성능을 보이고 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;back-projection&quot;&gt;Back-projection&lt;/h2&gt;
&lt;p&gt;Depth map과 Intrinsic parameter 및 extrinsin parameter 을 알고 있다고 가정한다면 3D 가 2D 로 변환되는 식을 역산하여 3D좌표를 구할 수 있습니다.&lt;/p&gt;

&lt;h1 id=&quot;관련-개념&quot;&gt;관련 개념&lt;/h1&gt;
&lt;h3 id=&quot;slam&quot;&gt;SLAM&lt;/h3&gt;

&lt;h3 id=&quot;point-cloud&quot;&gt;Point cloud&lt;/h3&gt;

&lt;h1 id=&quot;관련-keyword&quot;&gt;관련 Keyword&lt;/h1&gt;
&lt;h3 id=&quot;orb-slam&quot;&gt;ORB-SLAM&lt;/h3&gt;
&lt;h3 id=&quot;arcore&quot;&gt;ARCore&lt;/h3&gt;

&lt;h1 id=&quot;공부할-내용&quot;&gt;공부할 내용&lt;/h1&gt;
&lt;p&gt;https://taeyoung96.github.io/paper_review/BTS/&lt;/p&gt;
</description>
        <pubDate>Sat, 08 May 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2021-05/about-depth-estimation</link>
        <guid isPermaLink="true">http://localhost:4000/2021-05/about-depth-estimation</guid>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>시간복잡도 계산하기</title>
        <description>&lt;p&gt;최근에 매칭 알고리즘 코드를 짰는데 테스트해보니 수행시간이 너무 오래 걸려서 시간복잡도를 한번 계산해보았다.&lt;/p&gt;

&lt;p&gt;pseudo code 는 아래와 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;n = t시점의 매칭점 개수
m = t+1시점의 매칭점 개수

for(k=3, k=Min(n,m)) // k는 Min(n,m) 까지 도달함.
{
    n_ = Permutation(n, k) // nPk 여기 시간복잡도는 일단 보류.
    m_ = Permutation(m, k) // mPk

    for(i=0, i=n_)
    {
        for(j=0, j=m_)
        {
            // matching1 함수는 k값에 영향을 받는다.
            err1 = matching1(k) {k+k+k}; 

            if(err1 &amp;gt;= THRESH)
                continue;
            
            // matching2 함수도 k값에 영향을 받는다.
            err2 = matching2(k) {k+k+k};

        }
    }

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;첫번째 for 문의 시간복잡도를 n,m에 대해 나타내면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Min(n,m)-3+1&lt;/code&gt; 이다.
n_, m_은 &lt;code class=&quot;highlighter-rouge&quot;&gt;n', m'&lt;/code&gt; 을 의미하며 이를 n,m에 대해 나타내면
&lt;code class=&quot;highlighter-rouge&quot;&gt;n'm' = P(n,k)P(m,k)&lt;/code&gt;
와 같다. 이는 &lt;code class=&quot;highlighter-rouge&quot;&gt;2k-2 &lt;/code&gt; 차수를 가진다. &lt;del&gt;순열을 쓴거부터 이미 여기부터 망한것 같다ㅜㅠ&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;3 &amp;lt;= k &amp;lt;= Min(n,m)&lt;/code&gt; 을 이용해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;2k-2&lt;/code&gt; 의 최대값을 구하려고 한다.
&lt;code class=&quot;highlighter-rouge&quot;&gt;Min(n,m)&lt;/code&gt; 은 어차피 n이나 m 둘중 하나의 값이므로 n이 항상 작다고 가정하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Min(n,m) = n&lt;/code&gt; 으로 치환하면 2k-2 = 2n-2 이다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;match_node(), match_edge&lt;/code&gt; 함수의 시간복잡도는 각 3k이고 if문을 고려해서 총 과정의 시간복잡도는 6k로 가정하고 6k=6n 으로 계산한다.&lt;/p&gt;

&lt;p&gt;첫번째 &lt;code class=&quot;highlighter-rouge&quot;&gt;for(k=3, k=Min(n,m))&lt;/code&gt; 반복문 시간복잡도는 n,
두번째 &lt;code class=&quot;highlighter-rouge&quot;&gt;for(i=0, i=n_) for(j=0, j=m_)&lt;/code&gt;의 시간복잡도는 2n-2
세번째 for문 안의 시간복잡도는 6n 이므로
n * (2n-2) * 6n = 13n^3-13n^2 이다.
Big O 로 표기하면 O(n^3) 이 된다. 최적화가 필요할 듯 싶다.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;2021-04-30 변경사항 기록&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;알고리즘을 내용적으로 분석해보니 쓸데없이 Permutation을 사용하고 있었다. 위 코드에서 n_을 Permutation이 아닌 Combination으로 변경했다. &lt;br /&gt;
속도가 많이 줄어든 것을 확인함. 1초 넘게 걸리던게 100ms 안에 다 끝나버렸다.&lt;/p&gt;

</description>
        <pubDate>Tue, 20 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2021-04/time-complexity-calculation</link>
        <guid isPermaLink="true">http://localhost:4000/2021-04/time-complexity-calculation</guid>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>cv Mat format type</title>
        <description>&lt;h2 id=&quot;cvmat-의-자료형&quot;&gt;cv::Mat 의 자료형&lt;/h2&gt;
&lt;p&gt;opencv의 Mat 은 아래와 같은 자료형을 지원한다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;CV_8U : 8-bit unsigned integer: uchar ( 0…255 )&lt;/li&gt;
  &lt;li&gt;CV_8S : 8-bit signed integer: schar ( -128… 127 )&lt;/li&gt;
  &lt;li&gt;CV_16U : 16-bit unsigned integer: ushort ( 0…65535 )&lt;/li&gt;
  &lt;li&gt;CV_16S : 16-bit signed integer: shor ( -32768…32767 )&lt;/li&gt;
  &lt;li&gt;CV_32S : 32-bit signed integer: int ( -2147483648…2147483647 )&lt;/li&gt;
  &lt;li&gt;CV_32F : 32-bt floating-point number: float ( -FLT_MAX…FLT_MAX, INF, NAN )&lt;/li&gt;
  &lt;li&gt;CV_64F : 64-bit floating-point number: double ( -DBL_MAX…DBL_MAX, INF, NAN )&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;나는 이미지를 다루기 때문에 보통 CV_8U 형을 많이 사용하지만 행렬연산 목적으로 Mat을 사용할 때는 범위가 더 넓은 자료형을 쓰는 것이 좋을 것 같다. 또한, opencv의 영상처리 알고리즘들은 가끔 입력가능한 format type이 정해져 있기 때문에 사용하고자 하는 opencv 함수가 어떤 format을 지원하는지 확인하면서 사용하는 것이 좋다.&lt;/p&gt;

&lt;h2 id=&quot;format-type-관련-에러&quot;&gt;format type 관련 에러&lt;/h2&gt;
&lt;p&gt;최근에 코드를 짜다가 Mat의 포맷관련한 문제를 몇가지 겪었다.&lt;/p&gt;

&lt;h3 id=&quot;unsupported-format&quot;&gt;unsupported format&lt;/h3&gt;
&lt;p&gt;cv::filter2d 함수에서 아래와 같은 예외가 발생했다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;terminate called after throwing an instance of 'cv::Exception'
  what():  OpenCV(3.4.6) /opt/opencv/opencv-3.4.6/modules/imgproc/src/filter.simd.hpp:3172: error: (-213:The function/feature is not implemented) Unsupported combination of source format (=4), and destination format (=4) in function 'getLinearFilter'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;확인해보니 filter2d 함수는 CV_8U, CV_16U, CV_32F 자료형인 입력만 지원한다고 한다. &lt;del&gt;opencv 공식문서에서 확인한 내용은 아니고 구글링으로 확인한 카더라임&lt;/del&gt;&lt;/p&gt;

&lt;h3 id=&quot;print-actual-mat-element&quot;&gt;Print actual Mat element&lt;/h3&gt;
&lt;p&gt;코드를 짜다보면 내가 짠 코드가 맞는 것인지 결과 Mat을 통해 확인하고 싶을 때가 있다. 나는 직접 픽셀값을 출력해서 확인하는 편인데 &lt;code class=&quot;highlighter-rouge&quot;&gt;std::cout&lt;/code&gt; 으로 출력하면 실제값과 다른 엉뚱한 숫자가 출력되는 것을 확인하였다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;case CV_8U:
{
    printf(&quot;%*u &quot;, 3, mat.at&amp;lt;uchar&amp;gt;(r, c));
    break;
}
case CV_32S:
{
    printf(&quot;%*d &quot;, 6, mat.at&amp;lt;int&amp;gt;(r, c));
    break;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;위처럼 포맷마다 적당한 출력형식을 정해주어야 하는 것 같다.&lt;/p&gt;

</description>
        <pubDate>Sat, 10 Apr 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2021-04/opencv-mat-format-type</link>
        <guid isPermaLink="true">http://localhost:4000/2021-04/opencv-mat-format-type</guid>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>xeus cling 라이브러리 설정</title>
        <description>&lt;p&gt;xeus cling 환경은 커널과 통하는 프로토콜을 바꿔준다. 그래서 cpp를 python처럼 주피터 노트북에서 interactive한 방식으로 사용할 수 있다. &lt;br /&gt;
xeus는 주피터 커널 프로토콜을 cpp로 구현한 라이브러리라고 한다. 여하튼 나는 아나콘다에 xeus cling 환경을 세팅해서 개발하고 있는데 간단한 코드 테스트할 때 매우 유용한 것 같다. &lt;br /&gt;
다만, cpp는 변수나 함수 선언 위치나 순서를 지켜줘야 하기 때문에 아무래도 다른 점이 있긴 하다.
python에서 라이브러리 import 할때는 셀 하나에 여러 모듈을 import 하곤 했어서 cpp에서도 한 셀에 include랑 load_lib을 다 때려넣고 실행했더니 커널이 죽는 현상이 있었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/78094857/112333756-35f89f00-8cfe-11eb-8a88-afddab84dd52.png&quot; alt=&quot;&quot; /&gt;
이런 에러가 나거나 커널이 죽어버렸다.&lt;/p&gt;

&lt;p&gt;코드 한줄을 한셀에 작성하니 문제가 해결 되었다. &lt;br /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/78094857/112333744-33964500-8cfe-11eb-94fc-a59c26c5f281.png&quot; alt=&quot;&quot; /&gt;
많은 라이브러리들을 일일이 쓰기엔 많아서 “xeus-cling-include.h” 헤더파일을 하나 생성하고 이 파일에서 필요한 라이브러리를 불러오도록 했다.&lt;/p&gt;

&lt;p&gt;2021.04.18 추가 기록.
imshow 함수가 동작은 하지만 이미지가 노트북에 보이지 않는 문제가 있었다.
노트북에서는 이미지를 url기반으로 표시하기 때문에 cv::imshow함수의 인자를 이에 맞게 재정의해주어야 한다고 한다.
먼저 세팅한 환경을 다시 살펴 보았다. 내가 깃허브에서 가져온 환경은 root기반으로 xeus-cling이 세팅이 되어야 하는데 나는 아나콘다 기반으로 설치를 했기 때문에 문제가 있는 듯 하다.&lt;/p&gt;

&lt;p&gt;제공되는 install.py 내용은 &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/include/jupyter&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;jupyter_opencv_include.h&lt;/code&gt;파일을 생성하고 이 파일에 cv::imshow를 재정의한 코드를 붙여넣기한다.
그리고 파일명에 &lt;code class=&quot;highlighter-rouge&quot;&gt;libopencv&lt;/code&gt;가 포함된 파일을 스캔해서 cling 라이브러리 경로에 추가해준다.&lt;/p&gt;

&lt;p&gt;내 상황을 정리하자면&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;주피터노트북이 실행되는것은 anaconda 의 가상환경 env에서 실행됨.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/lib  /usr/local/include &lt;/code&gt;에 존재하는 opencv 라이브러리를 사용해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;imshow&lt;/code&gt;를 재정의한 &lt;code class=&quot;highlighter-rouge&quot;&gt;jupyter_opencv_include.h&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/include/jupyter&lt;/code&gt;에 생성.&lt;/li&gt;
  &lt;li&gt;주피터노트북에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;jupyter_opencv_include.h&lt;/code&gt;를 읽어야 함.&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Wed, 24 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2021-03/xeus-cling-load-lib</link>
        <guid isPermaLink="true">http://localhost:4000/2021-03/xeus-cling-load-lib</guid>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>이미지 이진화 참고 논문</title>
        <description>&lt;p&gt;패턴이 있는 배경 이미지에서 효과적으로 이진화를 수행하기 위해서 참고 논문 저장.
keyword: image processing adaptive threshold texture pattern image&lt;/p&gt;

&lt;p&gt;https://www.sciencedirect.com/science/article/abs/pii/S1047320311000630&lt;/p&gt;

&lt;p&gt;https://www.sciencedirect.com/science/article/abs/pii/0031320395000393&lt;/p&gt;

&lt;p&gt;https://ieeexplore.ieee.org/abstract/document/6272354&lt;/p&gt;

&lt;p&gt;https://ieeexplore.ieee.org/abstract/document/5685565&lt;/p&gt;
</description>
        <pubDate>Tue, 23 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2021-03/Reference</link>
        <guid isPermaLink="true">http://localhost:4000/2021-03/Reference</guid>
        
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>unique_ptr</title>
        <description>&lt;p&gt;아래와 같은 빌드에러 발생&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c++/7.5.0/bits/unique_ptr.h:821:30 error:invalid new-expression of abstract class type
{return unique_ptr&amp;lt;_Tp&amp;gt;(new_Tp(std::forward&amp;lt;_Args&amp;gt;(__args)...));}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Thu, 11 Mar 2021 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/2021-03/buildErr</link>
        <guid isPermaLink="true">http://localhost:4000/2021-03/buildErr</guid>
        
        
        <category>dev</category>
        
      </item>
    
  </channel>
</rss>